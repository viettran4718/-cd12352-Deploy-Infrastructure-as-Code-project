Description: CD12352 - Infrastructure as Code Project - Network

Parameters:
  EnvironmentName: 
    Description: An Environment name that will be prefixed to resources
    Type: String
  VpcCIDR:
    Type: String
  PublicSubnet1CIDR:
    Type: String
  PublicSubnet2CIDR:
    Type: String
  PrivateSubnet1CIDR:
    Type: String
  PrivateSubnet2CIDR:
    Type: String
Resources:
    ## VPC ##

    #VPC for Udagram App
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    # Create Internet Gateway
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    # Attach internet gateway to VPC
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    # Create public & private subnets 1
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: 
                !Ref VPC
            AvailabilityZone: "us-east-1a"
            CidrBlock: 
                !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: 
                !Ref VPC
            AvailabilityZone: "us-east-1a"
            CidrBlock: 
                !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
    
    # Create public & private subnets 2
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: 
                !Ref VPC
            AvailabilityZone: "us-east-1b"
            CidrBlock: 
                !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: 
                !Ref VPC
            AvailabilityZone: "us-east-1b"
            CidrBlock: 
                !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

    # Elastic IP for NAT Gateway
    EIPNatGateway1:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    EIPNatGateway2:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    # NAT gateway for public subnet
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIPNatGateway1.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIPNatGateway2.AllocationId
            SubnetId: !Ref PublicSubnet2

    # Route Table
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: 
                !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes

    # Route for public subnet
    PublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    # Associate Route Table to Public subnet
    AssociatePublicRoute1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    # Associating public route table with second public subnet
    AssociatePublicRoute2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    # Private route table 1
    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    # Route for private subnet
    PrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    # Private subnet 1 & route table 1 associate
    RouteTableAssociatedPrivate1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    # Private route table 2
    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    # Route for private subnet 2
    PrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    # Private subnet 2 & route table 2 associate
    RouteTableAssociatedPrivate2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPC:
        Description: Created a VPC for the specified
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    PublicRouteTable:
        Description: VPC Public Route Table
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${EnvironmentName}-PUB-RT

    PrivateRouteTable01:
        Description: Private Route Table 1
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-RT1

    PrivateRouteTable02:
        Description: Private Route Table 2
        Value: !Ref PrivateRouteTable2
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-RT2

    PublicSubnets:
        Description: List of the public subnets
        Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS

    PublicSubnet01:
        Description: Public subnet 1 in AZ 1
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PUB-SUB1

    PublicSubnet02:
        Description: Public subnet 2 in AZ 2
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PUB-SUB2

    PrivateSubnets:
        Description: List of private subnets
        Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-SUBS

    PrivateSubnet01:
        Description: Private subnet 1 in AZ 1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-SUB1

    PrivateSubnet02:
        Description: Private subnet 2 in AZ 2
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-SUB2